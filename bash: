
// api/proxy/[[...slug]].js
const fs = require("fs");
const path = require("path");

module.exports = async function handler(req, res) {
  try {
    const slugParts = Array.isArray(req.query.slug) ? req.query.slug : [];
    const subpath = slugParts.join("/").toLowerCase();

    // ðŸŸ¢ Sirve start.html directamente
    if (subpath === "start" || subpath === "start.html") {
      const filePath = path.join(process.cwd(), "public", "start.html");
      const html = fs.readFileSync(filePath, "utf8");
      res.setHeader("Content-Type", "text/html; charset=utf-8");
      return res.status(200).send(html);
    }

    // Redirigir /apps/modo/... a /apps/modopay/...
    if (req.url.includes("/apps/modo/")) {
      const redirectUrl = req.url.replace("/apps/modo/", "/apps/modopay/");
      return res.redirect(302, redirectUrl);
    }

    // Servir cualquier otro archivo estÃ¡tico de /public
    const staticPath = path.join(process.cwd(), "public", subpath);
    if (fs.existsSync(staticPath) && fs.statSync(staticPath).isFile()) {
      const ext = path.extname(staticPath);
      const contentType =
        ext === ".js" ? "application/javascript" :
        ext === ".css" ? "text/css" :
        ext === ".json" ? "application/json" :
        ext === ".png" ? "image/png" :
        ext === ".jpg" || ext === ".jpeg" ? "image/jpeg" :
        "text/plain; charset=utf-8";
      res.setHeader("Content-Type", contentType);
      return res.status(200).send(fs.readFileSync(staticPath));
    }

    return res.status(404).json({ error: "NOT_FOUND", subpath });
  } catch (e) {
    console.error("[proxy][error]", e);
    return res.status(500).json({ error: "SERVER_ERROR", message: e.message });
  }
};

